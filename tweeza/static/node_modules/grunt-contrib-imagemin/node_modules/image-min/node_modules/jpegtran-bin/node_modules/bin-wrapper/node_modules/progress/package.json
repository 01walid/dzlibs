{
  "name": "progress",
  "version": "1.1.3",
  "description": "Flexible ascii progress bar",
  "keywords": [
    "cli",
    "progress"
  ],
  "author": {
    "name": "TJ Holowaychuk",
    "email": "tj@vision-media.ca"
  },
  "dependencies": {},
  "main": "index",
  "engines": {
    "node": ">=0.4.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/visionmedia/node-progress"
  },
  "readme": "# node-progress\n\n  Flexible ascii progress bar\n\n## Installation\n\n    npm install progress\n\n## Usage\n\n   First we create a `ProgressBar`, giving it a format string\n   as well as the `total`, telling the progress bar when it will\n   be considered complete. After that all we need to do is `tick()` appropriately.\n\n```javascript\nvar ProgressBar = require('progress');\n\nvar bar = new ProgressBar(':bar', { total: 10 });\nvar timer = setInterval(function(){\n  bar.tick();\n  if (bar.complete) {\n    console.log('\\ncomplete\\n');\n    clearInterval(timer);\n  }\n}, 100);\n```\n\n## Options:\n\n  - `total` total number of ticks to complete\n  - `width` the displayed width of the progress bar defaulting to total\n  - `stream` the output stream defaulting to stdout\n  - `complete` completion character defaulting to \"=\"\n  - `incomplete` incomplete character defaulting to \"-\"\n  - `clear` option to clear the bar on completion defaulting to false\n  - `callback` optional function to call when the progress bar completes\n\n## Tokens:\n\n  - `:bar` the progress bar itself\n  - `:current` current tick number\n  - `:total` total ticks\n  - `:elapsed` time elapsed in seconds\n  - `:percent` completion percentage\n  - `:eta` estimated completion time in seconds\n\n## Examples\n\n### Download\n\n  In our download example each tick has a variable influence, so we pass the chunk length which adjusts the progress bar appropriately relative to the total length.\n\n```javascript\nvar ProgressBar = require('../')\n  , https = require('https');\n\nvar req = https.request({\n    host: 'download.github.com'\n  , port: 443\n  , path: '/visionmedia-node-jscoverage-0d4608a.zip'\n});\n\nreq.on('response', function(res){\n  var len = parseInt(res.headers['content-length'], 10);\n\n  console.log();\n  var bar = new ProgressBar('  downloading [:bar] :percent :etas', {\n      complete: '='\n    , incomplete: ' '\n    , width: 20\n    , total: len\n  });\n\n  res.on('data', function(chunk){\n    bar.tick(chunk.length);\n  });\n\n  res.on('end', function(){\n    console.log('\\n');\n  });\n});\n\nreq.end();\n```\n\n  The code above will generate a progress bar that looks like this:\n\n```\ndownloading [=====             ] 29% 3.7s\n```\n\nYou can see more examples in the `examples` folder.\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk `&lt;tj@vision-media.ca&gt;`\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/visionmedia/node-progress/issues"
  },
  "_id": "progress@1.1.3",
  "_from": "progress@~1.1.0"
}
